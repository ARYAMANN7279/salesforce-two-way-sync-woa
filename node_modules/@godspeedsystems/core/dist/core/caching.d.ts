import { GSContext, GSFunction } from './interfaces';
import { PlainObject } from './common';
import { GSCachingDataSource } from './_interfaces/sources';
export declare function checkCachingDs(caching: any, location?: PlainObject): void;
export declare function evaluateCachingInstAndInvalidates(ctx: GSContext, caching: GSFunction, taskValue: any): Promise<{
    cachingDs: GSCachingDataSource;
}>;
export declare function fetchFromCache(cachingInstruction: PlainObject | null): Promise<any>;
export declare function setInCache(ctx: GSContext, cachingInstruction: PlainObject | null, status: any): Promise<void>;
