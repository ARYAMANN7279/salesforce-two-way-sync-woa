import { GSContext, GSDataSource, PlainObject, GSDataSourceAsEventSource, GSCloudEvent, GSStatus } from "@godspeedsystems/core";
declare class DataSource extends GSDataSource {
    protected initClient(): Promise<PlainObject>;
    execute(ctx: GSContext, args: PlainObject): Promise<any>;
}
declare class EventSource extends GSDataSourceAsEventSource {
    subscribeToEvent(eventKey: string, eventConfig: PlainObject, processEvent: (event: GSCloudEvent, eventConfig: PlainObject) => Promise<GSStatus>): Promise<void>;
}
declare const SourceType = "BOTH";
declare const Type = "kafka";
declare const CONFIG_FILE_NAME = "kafka";
declare const DEFAULT_CONFIG: {
    type: string;
    clientId: string;
    brokers: string[];
    log: {
        attributes: {
            eventsource_type: string;
        };
    };
};
export { DataSource, EventSource, SourceType, Type, CONFIG_FILE_NAME, DEFAULT_CONFIG };
